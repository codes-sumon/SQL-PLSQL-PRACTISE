-- CHAPTER 6

-- Q4
SELECT MAX(SALARY),MIN(SALARY),SUM(SALARY),ROUND(AVG(SALARY))
FROM EMPLOYEES;

-- Q5
SELECT JOB_ID, MAX(SALARY),MIN(SALARY),SUM(SALARY),ROUND(AVG(SALARY))
FROM EMPLOYEES
GROUP BY JOB_ID;

-- Q6
SELECT JOB_ID, COUNT(*)
FROM EMPLOYEES
GROUP BY JOB_ID;

SELECT JOB_ID, COUNT(*)
FROM EMPLOYEES
GROUP BY JOB_ID
HAVING JOB_ID = UPPER('&JOB');

SELECT JOB_ID, COUNT(*)
FROM EMPLOYEES
WHERE JOB_ID = UPPER('&JOB')
GROUP BY JOB_ID;

--Q7
SELECT COUNT(DISTINCT MANAGER_ID) "NUMBER OF MANAGER" FROM EMPLOYEES;

--Q8
SELECT MAX(SALARY) - MIN(SALARY) "DIFFRENT" FROM EMPLOYEES;

--Q9
SELECT MANAGER_ID, MIN(SALARY)
FROM EMPLOYEES
GROUP BY MANAGER_ID
HAVING MANAGER_ID IS NOT NULL AND MIN(SALARY)> 6000;

--Q10
SELECT COUNT(*) TOTAL,
      SUM(DECODE(TO_CHAR(HIRE_DATE, 'FMYYYY'),2005,1,0)) "2005",
      SUM(DECODE(TO_CHAR(HIRE_DATE, 'FMYYYY'),2006,1,0)) "2006",
      SUM(DECODE(TO_CHAR(HIRE_DATE, 'FMYYYY'),2007,1,0)) "2007",
      SUM(DECODE(TO_CHAR(HIRE_DATE, 'FMYYYY'),2008,1,0)) "2008"
FROM EMPLOYEES;

--Q11
SELECT JOB_ID,
      SUM(DECODE(DEPARTMENT_ID,20,SALARY)) "DEPT 20",
      SUM(DECODE(DEPARTMENT_ID,50,SALARY)) "DEPT 50",
      SUM(DECODE(DEPARTMENT_ID,80,SALARY)) "DEPT 80",
      SUM(DECODE(DEPARTMENT_ID,90,SALARY)) "DEPT 90",
      SUM(SALARY) TOTAL
FROM EMPLOYEES
GROUP BY JOB_ID;

--CHAPTER 7
--Q1
SELECT LOCATION_ID,STREET_ADDRESS,CITY,STATE_PROVINCE,COUNTRY_NAME
FROM LOCATIONS
NATURAL JOIN COUNTRIES;

--Q2
SELECT E.LAST_NAME,E.DEPARTMENT_ID, D.DEPARTMENT_NAME
FROM EMPLOYEES E INNER JOIN DEPARTMENTS D
ON (E.DEPARTMENT_ID = D.DEPARTMENT_ID);

--Q3
SELECT E.LAST_NAME,E.JOB_ID,E.DEPARTMENT_ID, D.DEPARTMENT_NAME
FROM LOCATIONS L INNER JOIN DEPARTMENTS D
ON(D.LOCATION_ID = L.LOCATION_ID)
INNER JOIN EMPLOYEES E
ON(E.DEPARTMENT_ID = D.DEPARTMENT_ID)
WHERE UPPER(L.CITY) = UPPER('TORONTO');

--Q4
SELECT E.LAST_NAME Employee, E.Employee_ID EMP#, M.LAST_NAME MANAGER, M.Employee_ID MGR#
FROM EMPLOYEES E JOIN EMPLOYEES M
ON E.MANAGER_ID = M.EMPLOYEE_ID
ORDER BY 2;

--Q5
SELECT E.LAST_NAME Employee, E.Employee_ID EMP#, M.LAST_NAME MANAGER, M.Employee_ID MGR#
FROM EMPLOYEES E LEFT JOIN EMPLOYEES M
ON E.MANAGER_ID = M.EMPLOYEE_ID
ORDER BY 2;

--Q6
SELECT E.LAST_NAME,E.DEPARTMENT_ID,C.LAST_NAME
FROM EMPLOYEES E JOIN EMPLOYEES C
ON (E.DEPARTMENT_ID = C.DEPARTMENT_ID)
WHERE E.EMPLOYEE_ID != C.EMPLOYEE_ID
ORDER BY 1,2,3;

--Q8
SELECT E.EMPLOYEE_ID,E.LAST_NAME
FROM EMPLOYEES E JOIN EMPLOYEES D
ON D.LAST_NAME = 'Davies'
WHERE D.HIRE_DATE < E.HIRE_DATE;

--Q9
SELECT E.LAST_NAME Employee, E.Employee_ID EMP#, M.LAST_NAME MANAGER, M.Employee_ID MGR#
FROM EMPLOYEES E JOIN EMPLOYEES M
ON E.MANAGER_ID = M.EMPLOYEE_ID
WHERE E.HIRE_DATE < M.HIRE_DATE
ORDER BY 2;


CREATE SEQUENCE TEST_SQ
START WITH 200
INCREMENT BY 10
MAXVALUE 1000;

SELECT * FROM USER_SEQUENCES;

CREATE SYNONYM EMP FOR EMPLOYEES;
SELECT * FROM EMP;

SELECT USER FROM USER_TABLES;


